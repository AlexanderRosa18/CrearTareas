import json
import os
from datetime import datetime, timedelta

#Definimos los nombres de los archivos
tareas_pendientes_file = "tareas_pendientes.json"
tareas_completadas_file = "tareas_completadas.json"

#Esta función es para cargar tareas desde un archivo JSON
def cargar_tareas(file_name):
    if os.path.exists(file_name):
        with open(file_name, "r") as file:
            return json.load(file)
    else:
        return []

#Esta función sirve para guardar tareas en un archivo JSON
def guardar_tareas(tareas, file_name):
    with open(file_name, "w") as file:
        json.dump(tareas, file, indent=4)

#Acá vamos a poder aguardar las tareas
def agregar_tarea(tareas):
    titulo = input("Ingrese el título de la tarea que desee crear: ")
    descripcion = input("Ingrese la descripción de la tarea: ")
    fecha_vencimiento = input("Ingrese la fecha de vencimiento (opcional, formato: YYYY-MM-DD): ")

    tarea = {
        "titulo": titulo,
        "descripcion": descripcion,
        "completada": False
    }

    if fecha_vencimiento:
        try:
            fecha_vencimiento = datetime.strptime(fecha_vencimiento, "%Y-%m-%d")
            tarea["fecha_vencimiento"] = fecha_vencimiento.strftime("%Y-%m-%d")
        except ValueError:
            print("Formato de fecha incorrecto. La tarea se guardará sin fecha de vencimiento.")

    tareas.append(tarea)
    print("Tarea agregada con éxito.")

#Función para listar todas las tareas
def listar_tareas(tareas):
    if not tareas:
        print("No hay tareas pendientes.")
    else:
        for i, tarea in enumerate(tareas, start=1):
            print(f"{i}. Título: {tarea['titulo']}")
            print(f"   Descripción: {tarea['descripcion']}")
            if "fecha_vencimiento" in tarea:
                print(f"   Fecha de vencimiento: {tarea['fecha_vencimiento']}")
            print()

#Función para marcar una tarea como completada
def marcar_completada(tareas, tareas_completadas):
    listar_tareas(tareas)
    try:
        idx = int(input("Ingrese el número de la tarea que desea marcar como completada: ")) - 1
        if 0 <= idx < len(tareas):
            tarea = tareas.pop(idx)
            tarea["completada"] = True
            tareas_completadas.append(tarea)
            print("Tarea marcada como completada.")
        else:
            print("Número de tarea fuera de rango.")
    except ValueError:
        print("Entrada no válida. Ingrese un número válido.")

#Función principal
def main():
    tareas_pendientes = cargar_tareas(tareas_pendientes_file)
    tareas_completadas = cargar_tareas(tareas_completadas_file)

    while True:
        print("\nMenu:")
        print("1. Agregar una tarea")
        print("2. Lista de tareas pendientes")
        print("3. Marcar una tarea como realizada")
        print("4. Salir")
        
        opcion = input("Seleccione una opción: ")

        if opcion == "1":
            agregar_tarea(tareas_pendientes)
        elif opcion == "2":
            print("\nTareas pendientes:")
            listar_tareas(tareas_pendientes)
        elif opcion == "3":
            marcar_completada(tareas_pendientes, tareas_completadas)
        elif opcion == "4":
            guardar_tareas(tareas_pendientes, tareas_pendientes_file)
            guardar_tareas(tareas_completadas, tareas_completadas_file)
            print("¡Hasta pronto!")
            break
        else:
            print("Opción no válida. Intente nuevamente.")

if __name__ == "__main__":
    main()